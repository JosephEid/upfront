import Head from "next/head";
import { Box, Button, Center, Divider, Input, Text } from "@chakra-ui/react";
import Layout from "@/components/Layout";
import React, { useEffect, useState } from "react";
import { GetServerSideProps } from "next";
import { signIn, confirmSignIn } from "aws-amplify/auth";
import { Amplify } from "aws-amplify";

interface MagicLinkProps {
    email: string;
    token: string;
}

Amplify.configure({
    Auth: {
        Cognito: {
            userPoolId: "",
            userPoolClientId: "",
            loginWith: {
                email: true,
            },
        },
    },
});

export default function Login(props: MagicLinkProps) {
    const trySignIn = async () => {
        const cognitoUser = await signIn({ username: props.email });
        try {
            const challengeResult = await confirmSignIn({
                challengeResponse: props.token,
            });
        } catch (err) {
            console.log(err);
            alert("token invalid");
        }
    };
    useEffect(() => {
        if (props.email !== "" && props.token !== "") {
            trySignIn();
        }
    });
    return (
        <>
            <Head>
                <title>Upfront - Login</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link
                    rel="icon"
                    href="/upfront/svg/favicon-no-background.svg"
                />
            </Head>
            <Layout>
                <Center>
                    <Box>
                        <Text fontSize={"2.5rem"} fontWeight={700} my="1rem">
                            Login
                        </Text>
                        <Text>
                            Log in below to manage and view Jobs that you have
                            posted.
                        </Text>
                        <Input
                            type="email"
                            placeholder="Enter your email address."
                            my="1rem"
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                        />
                        <Divider mb="1rem" />
                        <Button width="100%" onClick={() => submitClicked()}>
                            Submit
                        </Button>
                    </Box>
                </Center>
            </Layout>
        </>
    );
}

export const getServerSideProps = (async (context) => {
    const props: MagicLinkProps = {
        email: context.query.email as string,
        token: context.query.token as string,
    };
    return { props: props };
}) satisfies GetServerSideProps<MagicLinkProps>;
