import Head from "next/head";
import { Box, Text } from "@chakra-ui/react";
import JobSearch from "@/components/JobSearch";
import Layout from "@/components/Layout";
import { GetServerSideProps } from "next";
import { JobPost } from "@/components/JobPost";
import React, { useState } from "react";
import { JobPostItem } from "./api/checkout_session/[id]";
import { getAllJobs } from "./api/all_jobs";

export default function Home({ jobs }: { jobs: JobPostItem[] }) {
    const [jobPosts, setJobPosts] = useState(jobs);
    return (
        <>
            <Head>
                <title>Upfront - Jobs</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link
                    rel="icon"
                    href="/upfront/svg/favicon-no-background.svg"
                />
            </Head>
            <Layout>
                <Text fontSize={"2.5rem"} fontWeight={700} my="1rem">
                    Don&apos;t waste time. Be{" "}
                    <Text as="span" fontWeight="800" color={"upfront.300"}>
                        Upfront.
                    </Text>
                </Text>
                <Text fontWeight={700} fontSize={"2rem"} mb="1rem">
                    Where{" "}
                    <Text as="span" fontWeight="800" color={"upfront.300"}>
                        salaries
                    </Text>{" "}
                    are always{" "}
                    <Text as="span" fontWeight="800" color={"upfront.300"}>
                        provided.
                    </Text>
                </Text>
                <JobSearch setJobPosts={(x) => setJobPosts(x)} />
                <Box my="1rem">
                    {jobPosts &&
                        jobPosts?.map((x, i) => {
                            return (
                                <Box my="1rem" key={i}>
                                    <JobPost {...x} />
                                </Box>
                            );
                        })}
                    {!jobPosts ||
                        (jobPosts.length === 0 && (
                            <Text>No Jobs found matching your criteria...</Text>
                        ))}
                </Box>
            </Layout>
        </>
    );
}

export const getServerSideProps = (async (context) => {
    const getAllJobsResponse: JobPostItem[] = await getAllJobs();
    return { props: { jobs: getAllJobsResponse } };
}) satisfies GetServerSideProps<{ jobs: JobPostItem[] }>;
